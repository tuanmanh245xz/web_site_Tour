package com.iva.backend.controller;


import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.server.ResponseStatusException;

import com.iva.backend.dtos.ProductsDTO;

import jakarta.validation.Valid;

@RestController
@RequestMapping("api/v1/products")
public class ProductController {
	@GetMapping("")
	public ResponseEntity<String> getAllProducts() {
		return ResponseEntity.ok("api get Product ");
		
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<String> getProductById(@PathVariable("id") String  productId) {
		return ResponseEntity.ok("api get ProductId " + productId.toString());
		
	}
	//de check thumbnail 
	@PostMapping(value = "", consumes= MediaType.MULTIPART_FORM_DATA_VALUE )
	
 	public ResponseEntity<?> createProducts(@Valid @RequestBody ProductsDTO productsDTO, @RequestPart("file") MultipartFile file ,BindingResult result) {
			try {
				//hien loi mess
				if(result.hasErrors()) {
					List<String> errors =  result.getFieldErrors()
					.stream()
					.map(fieldErrors -> fieldErrors.getDefaultMessage()).toList();
					return ResponseEntity.badRequest().body(errors);
				}
				if(file.getSize() > 10 * 1024 * 1024) {
					throw new ResponseStatusException(HttpStatus.PAYLOAD_TOO_LARGE,"File img is to large !!!");
				}
				return ResponseEntity.ok("produt create success! "+productsDTO  );
			}catch (Exception e) {
				return ResponseEntity.badRequest().body(e.getMessage());
			}
		}

	
		
	}

